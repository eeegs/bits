//-----------------------------------------------------------------------------
//
//    ** DO NOT EDIT THIS FILE! **
//    This file was generated by a tool
//    re-running the tool will overwrite this file.
//
//-----------------------------------------------------------------------------

#include "CA_Library.h"
#include "hal/gpio_hal.h"
#include "../../src/PAL/Include/CPU_GPIO_decl.h"

HRESULT CA_Library_DirectGPIO::Read(CLR_RT_StackFrame &stack)
{
    uint32_t retValue = REG_READ(GPIO_IN_REG);
    SetResult_UINT32(stack, retValue);
    return S_OK;
}

HRESULT CA_Library_DirectGPIO::Write(CLR_RT_StackFrame &stack)
{
    unsigned int bits;
    Interop_Marshal_UINT32(stack, 0, bits);

    unsigned int mask;
    Interop_Marshal_UINT32(stack, 1, mask);

    REG_WRITE(GPIO_OUT_W1TS_REG, bits & mask);
    REG_WRITE(GPIO_OUT_W1TC_REG, ~bits & mask);
    return S_OK;
}

/** In the main firmware there is some state infomation kept regarding the GPIOs, this code ingnore that.
    Do not mix the pins you are using directly with any of the other firmware functions.
*/

HRESULT CA_Library_DirectGPIO::SetMode(CLR_RT_StackFrame &stack)
{
    signed int pinMode;
    Interop_Marshal_INT32(stack, 0, pinMode);

    unsigned __int64 mask;
    Interop_Marshal_UINT64(stack, 1, mask);

    gpio_config_t GPIOConfig;

    GPIOConfig.intr_type = GPIO_INTR_ANYEDGE;
    GPIOConfig.pin_bit_mask = mask;
    GPIOConfig.mode = GPIO_MODE_DISABLE;
    GPIOConfig.pull_up_en = GPIO_PULLUP_DISABLE;
    GPIOConfig.pull_down_en = GPIO_PULLDOWN_DISABLE;

    switch ((PinMode)pinMode)
    {
        case PinMode_Input:
            GPIOConfig.mode = GPIO_MODE_INPUT;
            break;
        case PinMode_InputPullDown:
            GPIOConfig.mode = GPIO_MODE_INPUT;
            GPIOConfig.pull_down_en = GPIO_PULLDOWN_ENABLE;
            break;
        case PinMode_InputPullUp:
            GPIOConfig.mode = GPIO_MODE_INPUT;
            GPIOConfig.pull_up_en = GPIO_PULLUP_ENABLE;
            break;
        case PinMode_Output:
            GPIOConfig.mode = GPIO_MODE_OUTPUT;
            break;
        case PinMode_OutputOpenDrain:
            GPIOConfig.mode = GPIO_MODE_OUTPUT_OD;
            break;
        case PinMode_OutputOpenDrainPullUp:
            GPIOConfig.mode = GPIO_MODE_OUTPUT_OD;
            GPIOConfig.pull_up_en = GPIO_PULLUP_ENABLE;
            break;
        case PinMode_OutputOpenSource:
            GPIOConfig.mode = GPIO_MODE_OUTPUT_OD;
            break;
        case PinMode_OutputOpenSourcePullDown:
            GPIOConfig.mode = GPIO_MODE_OUTPUT_OD;
            GPIOConfig.pull_down_en = GPIO_PULLDOWN_ENABLE;
            break;
    }
    gpio_config(&GPIOConfig);

    return S_OK;
}
